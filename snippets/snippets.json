{
	"创建FutureBuilder": {
		"prefix": "fb",
		"body": [
			"FutureBuilder(",
			"  future: null,",
			"  initialData: null,",
			"  builder: (BuildContext context, AsyncSnapshot snapshot) {",
			"    return $1;",
			"  },",
			");"
		],
		"description": "创建FutureBuilder"
	},
	"创建RcStreamBuilder": {
		"prefix": [
			"sb",
			"rcsb"
		],
		"body": [
			"RcStreamBuilder(",
			"  stream: $1,",
			"  builder: (BuildContext context, dynamic snapshot) {",
			"    return $3;",
			"  },",
			"),"
		],
		"description": "创建StreamBuilder"
	},
	"创建Center": {
		"prefix": "cent",
		"body": [
			"Center(",
			"    child: $1,",
			"),"
		],
		"description": "创建Center"
	},
	"创建Column": {
		"prefix": "col",
		"body": [
			"Column(",
			"    children: [$1],",
			"),"
		],
		"description": "创建Column"
	},
	"创建RcSparatedColumn": {
		"prefix": [
			"rccol",
			"spcol"
		],
		"body": [
			"RcSparatedColumn(",
			"    itemCount: 1,",
			"    separatorBuilder: (context, int index) {},",
			"    itemBuilder: (context, int index) {},",
			"),"
		],
		"description": "创建RcSparatedColumn"
	},
	"创建Row": {
		"prefix": "row",
		"body": [
			"Row(",
			"  children: [],",
			"),"
		],
		"description": "创建Row"
	},
	"创建RcSparatedRow": {
		"prefix": [
			"sprow",
			"rcrow"
		],
		"body": [
			"RcSparatedRow(",
			"    itemCount: 1,",
			"    separatorBuilder: (context, int index) {},",
			"    itemBuilder: (context, int index) {},",
			"),"
		],
		"description": "创建RcSparatedRow"
	},
	"创建完整的Container": {
		"prefix": "cont",
		"body": [
			"Container(",
			"  width: $1,",
			"  height: $2,",
			"  decoration: BoxDecoration(",
			"    color: Colors.$3,",
			"    border: Border.fromBorderSide(",
			"      Divider.createBorderSide(context,color: Colors.$3)",
			"    ),",
			"  ),",
			"  child: $5,",
			"),"
		],
		"description": "创建完整的Container"
	},
	"创建基本的ListView": {
		"prefix": [
			"lv",
			"listv"
		],
		"body": [
			"RcListView(",
			"  children: <Widget>[",
			"   $1",
			"  ],",
			")"
		],
		"description": "创建基本的ListView"
	},
	"创建ListView.builder": {
		"prefix": [
			"lvb",
			"listb"
		],
		"body": [
			"RcListView.builder(",
			"   itemCount: $1,",
			"   itemBuilder: (BuildContext context, int index) {",
			"     return $2;",
			"   },",
			"),"
		],
		"description": "创建ListView.builder"
	},
	"创建带分割线的ListView.separated": {
		"prefix": [
			"lvsp",
			"listp"
		],
		"body": [
			"RcListView.separated(",
			"   itemCount: $1,",
			"   itemBuilder: (context,int index){ ",
			"   return $2;",
			"   },",
			"   separatorBuilder: (context,int index){ ",
			"   return RcDivider()$3;",
			"   },",
			"),"
		],
		"description": "创建带分割线的ListView.separated"
	},
	"创建方法": {
		"prefix": "me",
		"body": [
			"void $1(){",
			"  //TODO",
			"}"
		],
		"description": "创建方法"
	},
	"创建私有方法": {
		"prefix": "mep",
		"body": [
			"void _$1(){",
			"  //TODO",
			"}"
		],
		"description": "创建私有方法"
	},
	"创建SizedBox": {
		"prefix": "sizeb",
		"body": [
			"SizedBox();"
		],
		"description": "创建SizedBox"
	},
	"创建SingleChildScrollView": {
		"prefix": "sgsv",
		"body": [
			"SingleChildScrollView(",
			"  scrollDirection: Axis.vertical,",
			"  padding: EdgeInsets.all($1),",
			"  controller: $2,",
			"  child: $3,",
			");"
		],
		"description": "创建SingleChildScrollView"
	},
	"StatefulWidget生命周期": {
		"prefix": "stafwgcycle",
		"body": [
			"//  参与人：",
			"",
			"import 'package:flutter/widgets.dart';",
			"import 'package:ricent_components/rc_layout.dart'; ",
			"import 'package:ricent_components/rc_scaffold.dart'; ", 
			"import 'package:ricent_core/ricent_core.dart';",
			"",
			"class $1 extends StatefulWidget {",
			"  $1();",
			"  @override",
			"  $1State createState() => $1State();",
			"}", 
			"", 
			"class $1State extends State<$1> {",
			"  _$1Ctrl ctrl;", 
			"",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    ctrl = _$1Ctrl();",
			"  }",
			"  ",
			"  @override",
			"  void dispose() {",
			"    ctrl.dispose();",
			"    super.dispose();",
			"  }",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"   return RcScaffoldModuleMain(",
			"      title: '$2',",
			"      menuTap: () {},",
			"      body: RcListView(",
			"        children: <Widget>[$3],",
			"      ),",
			"   );",
			"  }",
			"  ",
			"  @override",
			"  void didUpdateWidget($1 oldWidget) {",
			"    // TODO: implement didUpdateWidget",
			"    super.didUpdateWidget(oldWidget);",
			"  }",
			"  ",
			"  @override",
			"  void didChangeDependencies() {",
			"    // TODO: implement didChangeDependencies",
			"    super.didChangeDependencies();",
			"  }",
			"}",
			"class _$1Ctrl extends ControllerBase{",
			"  _$1Ctrl(){}",
			"  @override",
			"  void dispose() {",
			"  }",
			"}"
		],
		"description": "StatefulWidget生命周期"
	},
	"创建StatelessWidget": {
		"prefix": "stal",
		"body": [
			"//  参与人：",
			"",
			"import 'package:flutter/material.dart';",
			"import 'package:ricent_components/rc_layout.dart'; ",
			"import 'package:ricent_components/rc_scaffold.dart';",
			"class $1 extends StatelessWidget {",
			"  $1();",
			"  @override",
			"  Widget build(BuildContext context) {",
			"   return RcScaffoldModuleChild(",
			"      homeRouteName: '$2',",
			"      title: '$3',",
			"      menuTap: () {},",
			"      body: RcListView(",
			"        children: <Widget>[$4],",
			"      ),",
			"   );",
			"  }",
			"}"
		],
		"description": "tatelessWidget"
	},
	"创建一个标准的Text": {
		"prefix": "text",
		"body": [
			"RcText('$1',),"
		],
		"description": "创建一个标准的Text"
	},
	"创建一个模块路由": {
		"prefix": "route",
		"body": [
			"//  参与人：",
			"",
			"import 'package:flutter/material.dart';",
			"/// 模块路由",
			"/// 需要在外壳引入",
			"/// ```dart",
			"/// var routes = Map<String, WidgetBuilder>();",
			"/// $1Routes.build(routes);",
			"/// routes.addAll({",
			"///   \"/\": (BuildContext context) => ApplicationWiget(),",
			"/// });",
			"/// ```",
			"class $1Routes {",
			"   static const String module = '/$2';",
			"   static const String home = '/$2/home';",
			"   static void build(Map<String, WidgetBuilder> map) {",
			"      map.addAll({",
			"         home: (BuildContext context, {arguments}) => $3",
			"      });",
			"   }",
			"}"
		],
		"description": "创建一个标准的Text"
	},
	"创建一个Store": {
		"prefix": "store",
		"body": [
			"//  参与人：",
			"",
			"",
			"class $1Store extends StoreBase {",
			"  $1Store() {}",
			"",
			"  @override",
			"  void dispose() {}",
			"}",
			"",
			"class $1StoreWidget extends StatelessWidget {",
			"  final Widget child;",
			"  const $1StoreWidget({@required this.child});",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return StoreProvider<$1Store>(",
			"      builder: (context, List stores) {",
			"        return stores.firstWhere(",
			"          (test) => test is $1Store,",
			"          orElse: () => $1Store(),",
			"        );",
			"      },",
			"      child: child,",
			"    );",
			"  }",
			"}"
		],
		"description": "创建一个Store"
	},
	"创建一个Api类": {
		"prefix": "api",
		"body": [
			"//  参与人：",
			"",
			"import 'package:ricent_core/ricent_core.dart';",
			"",
			"class $1Api extends Http {",
			"   static final $1Api _singleton = $1Api._internal();",
			"   $1Api._internal();",
			"   factory $1Api() {",
			"      return _singleton;",
			"   }",
			"}",
			""
		],
		"description": "创建一个Api类"
	},
	"创建一个app入口": {
		"prefix": "appmain",
		"body": [
			"//  参与人：",
			"",
			"import 'dart:io';",
			"",
			"// import 'package:amap_location/amap_location.dart';",
			"// import 'package:dispersive/api/amap.dart';",
			"import 'package:ricent_components/rc_pages.dart';",
			"import 'package:flutter/material.dart';",
			"import 'package:flutter/services.dart';",
			"import 'package:intl/intl.dart';",
			"import 'package:ricent_components/rc_basic_ui.dart';",
			"import 'package:ricent_components/rc_core_ui.dart';",
			"import 'package:ricent_components/rc_permission.dart';",
			"import 'package:ricent_components/rc_theme.dart';",
			"import 'package:ricent_components/rc_version.dart';",
			"import 'package:ricent_core/ricent_core.dart'; ",
			"import 'package:flutter_beaver_system/page/routes.dart';",
			"import 'package:flutter_beaver_system/page/store.dart';",
			"import 'package:fluwx/fluwx.dart' as fluwx;",
			"",
			"void main() async {",
			"  WidgetsFlutterBinding.ensureInitialized();",
			"  //  时间格式支持化中文",
			"  Intl.defaultLocale = \"zh_CN\";",
			"  if (Platform.isAndroid) {",
			"    SystemChrome.setSystemUIOverlayStyle(",
			"      SystemUiOverlayStyle(",
			"        statusBarColor: Colors.transparent,",
			"      ),",
			"    );",
			"  }",
			"  String customId = \"tests\";",
			"  String identity = \"tests\";",
			"  //  系统配置",
			"  Ricent.setConfig(",
			"     api: 'https://api.ricent.com',",
			"     identity: identity,",
			"     name: \"小散工程\",",
			"     enterpriseId: customId,",
			"     customId: customId,",
			"  );",
			"  ",
			"  // 高德地图定位，",
			"  // await AMapLocationClient.setApiKey(AMapConfig.getKey());",
			"  // await AMapLocationClient.startup(AMapLocationOption(",
			"  //     desiredAccuracy: CLLocationAccuracy.kCLLocationAccuracyHundredMeters));",
			"  //  微信配置",
			"  // fluwx.registerWxApi(",
			"  //     appId: \"\",",
			"  //     universalLink: 'https://app.ricent.com/'+identity+'/');",
			"  ",
			"  runApp(Application());",
			"  //  获取权限",
			"  await RcPermission.requestPermissions();",
			" }",
			"  ",
			" class Application extends StatefulWidget {",
			"  @override",
			"  State<StatefulWidget> createState() => ApplicationState();",
			" }",
			"  ",
			" class ApplicationState extends State<Application> {",
			"  @override",
			"  void initState() {",
			"     // JMessageAuth.init();",
			"  ",
			"     super.initState();",
			"  }",
			"  ",
			"  @override",
			"  Widget build(BuildContext context) {",
			"     var routes = Map<String, WidgetBuilder>();",
			"     SystemRoutes.build(routes);",
			"     ComponentPageRoutes.build(routes);",
			"  ",
			"     routes.addAll({",
			"     \"/\": (BuildContext context) => ApplicationWiget(),",
			"     });",
			"     return ThemeStoreWidget(",
			"       child:",
			"          RcLookupStreamWidget<ThemeStore, ThemeMode>(builder: (context, mode) {",
			"        return MaterialApp(",
			"     //  显示渲染情况",
			"     // showPerformanceOverlay: true,",
			"     //  显示语义debug",
			"     // showSemanticsDebugger: true,",
			"     // debugShowMaterialGrid: true,",
			"     debugShowCheckedModeBanner: false,",
			"     title: Ricent.name,",
			"     //  时间格式化",
			"     // locale: Locale('zh', 'CN'),",
			"     localizationsDelegates: [",
			"        //  引用",
			"        // flutter_localizations:",
			"        //   sdk: flutter",
			"        // GlobalCupertinoLocalizations.delegate,",
			"        // GlobalMaterialLocalizations.delegate,",
			"        // GlobalWidgetsLocalizations.delegate,",
			"        //  引用  pull_to_refresh: ^1.5.4",
			"        // RefreshLocalizations.delegate",
			"     ],",
			"     supportedLocales: [",
			"         const Locale('en', 'US'),",
			"         const Locale('zh', 'CN'),",
			"     ],",
			"     onGenerateRoute: (RouteSettings settings) {",
			"        final Function route = routes[settings.name];",
			"        return route != null",
			"        ? MaterialPageRoute(",
			"          settings: settings,",
			"          builder: (context) {",
			"          return GestureDetector(",
			"          behavior: HitTestBehavior.translucent,",
			"          onTap: () {",
			"          // 触摸收起键盘",
			"          FocusScope.of(context).requestFocus(FocusNode());",
			"          },",
			"          child: settings.arguments != null",
			"              ? route(context, arguments: settings.arguments)",
			"              : route(context),",
			"         );",
			"         },",
			"         )",
			"           : null;",
			"     },",
			"     theme: RicentTheme.theme(),",
			"     darkTheme: RicentTheme.darkTheme(),",
			"     themeMode: mode,",
			"     builder: (BuildContext context, Widget child) {",
			"           RicentTheme.initScreen(context);",
			"  ",
			"        return ApplicationStoreWidget(child: child);",
			"     },",
			"     );",
			"  }),);",
			"  }",
			"}",
			"  ",
			"class ApplicationWiget extends StatelessWidget {",
			"  @override",
			"  Widget build(BuildContext context) {",
			"     AuthStore authStore = StoreProvider.of(context);",
			"        return VersionStoreWidget(",
			"            child: StreamBuilder(",
			"                stream: authStore.authSerivce.stream,",
			"                builder: (BuildContext context, AsyncSnapshot<AuthState> state) {",
			"                return state.hasData && state.data is AuthAuthenticated",
			"                //登录后的UI地址 ",
			"                ? MainPage()",
			"                : DecoratedBox(",
			"                child: RcLoading(),",
			"                decoration: BoxDecoration(",
			"               color: Colors.white,",
			"                 ),",
			"               );",
			"        },",
			"      ),",
			"    );",
			"  }",
			"}",
			"  ",
			"class ApplicationStoreWidget extends StatelessWidget {",
			"  final Widget child;",
			"  const ApplicationStoreWidget({@required this.child});",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return RicentStoreWidget(",
			"      child: AuthStoreWidget(",
			"        child: child,",
			"      ),",
			"    );",
			"  }",
			"}"
		],
		"description": "创建一个Api类"
	},
	"RcScaffoldModuleMain": {
		"prefix": [
			"stafmmain",
			"stafmo"
		],
		"body": [
			"//  参与人：",
			"",
			"import 'package:flutter/widgets.dart';",
			"import 'package:flutter/material.dart';",
			"import 'package:ricent_core/ricent_core.dart';",
			"import 'package:ricent_components/rc_layout.dart'; ",
			"import 'package:ricent_components/rc_scaffold.dart';",
			"",
			"class $1 extends StatefulWidget {",
			"  $1();",
			"",
			"  @override",
			"  _$1State createState() => _$1State();",
			"}",
			"",
			"class _$1State extends State<$1> {",
			"  _$1Ctrl ctrl;",
			"  ThemeData themeData;",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    ctrl = _$1Ctrl();",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"    ctrl.dispose();",
			"    super.dispose();",
			"  }",
			"  ",
			"  @override",
			"  Widget build(BuildContext context) {",
			"   themeData = Theme.of(context);",
			"   return RcScaffoldModuleMain(",
			"      title: '$2',",
			"      menuTap: () {},",
			"      body: RcListView(",
			"        children: <Widget>[$3],",
			"      ),",
			"   );",
			"  }",
			"}",
			"class _$1Ctrl extends ControllerBase{",
			"  _$1Ctrl(){}",
			"  @override",
			"  void dispose() {",
			"  }",
			"}"
		],
		"description": "RcScaffoldModuleMain"
	},
	"RcScaffoldModuleChild": {
		"prefix": [
			"stafmc"
		],
		"body": [
			"//  参与人：",
			"",
			"import 'package:flutter/widgets.dart';",
			"import 'package:flutter/material.dart';",
			"import 'package:ricent_components/rc_layout.dart'; ",
			"import 'package:ricent_core/ricent_core.dart';",
			"import 'package:ricent_components/rc_scaffold.dart';",
			"",
			"class $1 extends StatefulWidget {",
			"  $1();",
			"",
			"  @override",
			"  _$1State createState() => _$1State();",
			"}",
			"",
			"class _$1State extends State<$1> {",
			"  _$1Ctrl ctrl;",
			"  ThemeData themeData;",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    ctrl = _$1Ctrl();",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"    ctrl.dispose();",
			"    super.dispose();",
			"  }",
			"  ",
			"  @override",
			"  Widget build(BuildContext context) {",
			"   themeData = Theme.of(context);",
			"   return RcScaffoldModuleChild(",
			"      homeRouteName: '$2',",
			"      title: '$3',",
			"      menuTap: () {},",
			"      body: RcListView(",
			"        children: <Widget>[$4],",
			"      ),",
			"   );",
			"  }",
			"}",
			"class _$1Ctrl extends ControllerBase{",
			"  _$1Ctrl(){}",
			"  @override",
			"  void dispose() {",
			"  }",
			"}"
		],
		"description": "RcScaffoldModuleChild"
	},
	"创建瑞信的主页 StatefulWidget": {
		"prefix": [
			"stafmain"
		],
		"body": [
			"//  参与人：",
			"",
			"import 'package:flutter/widgets.dart';",
			"import 'package:flutter/material.dart';",
			"import 'package:ricent_core/ricent_core.dart';",
			"import 'package:ricent_components/rc_layout.dart'; ",
			"import 'package:ricent_components/rc_scaffold.dart';",
			"",
			"class $1 extends StatefulWidget {",
			"  $1();",
			"",
			"  @override",
			"  _$1State createState() => _$1State();",
			"}",
			"",
			"class _$1State extends State<$1> {",
			"  _$1Ctrl ctrl;",
			"  ThemeData themeData;",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    ctrl = _$1Ctrl();",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"    ctrl.dispose();",
			"    super.dispose();",
			"  }",
			"  ",
			"  @override",
			"  Widget build(BuildContext context) {",
			"   themeData = Theme.of(context);",
			"   return RcScaffoldMain(",
			"      title: '$2',",
			"      body: RcListView(",
			"        children: <Widget>[$3],",
			"      ),",
			"   );",
			"  }",
			"}",
			"class _$1Ctrl extends ControllerBase{",
			"  _$1Ctrl(){}",
			"  @override",
			"  void dispose() {",
			"  }",
			"}"
		],
		"description": "StatefulWidget"
	},
	"创建 RcListTile": {
		"prefix": [
			"rctile",
			"tile"
		],
		"body": [
			"RcListTile(title: $1,),"
		],
		"description": "创建 RcListTile"
	},
	"创建模块配置文件": {
		"prefix": [
			"config"
		],
		"body": [
			"/// 模块配置",
			"class $1Config {",
			"  static String get id => 'imageprogress';",
			"  $1Config._internal();",
			"",
			"  //保存单例",
			"  static $1Config _singleton = $1Config._internal();",
			"",
			"  //工厂构造函数",
			"  factory $1Config() => _singleton;",
			"",
			"  /// 设置模块配置",
			"  $1Config.setConfig() {}",
			"}"
		],
		"description": "创建模块配置文件"
	},
	"创建Form表单页面": {
		"prefix": [
			"rcform,rcformstaf"
		],
		"body": [ 
			"import 'package:flutter/widgets.dart';",
			"import 'package:flutter/material.dart';",
			"import 'package:flutter_beaver_font/flutter_beaver_font.dart';",
			"import 'package:ricent_components/rc_basic_ui.dart';",
			"import 'package:ricent_components/rc_buttons.dart';",
			"import 'package:ricent_components/rc_core_ui.dart';",
			"import 'package:ricent_components/rc_form.dart';",
			"import 'package:ricent_components/rc_keyboard.dart';",
			"import 'package:ricent_components/rc_layout.dart';",
			"import 'package:ricent_core/ricent_core.dart';",
			"import 'package:ricent_components/rc_scaffold.dart';",
			"",
			"class $1 extends StatefulWidget {",
			"  $1();",
			"  @override",
			"  _$1State createState() => _$1State();",
			"}",
			"",
			"class _$1State extends State<$1> {",
			"  _$1Ctrl ctrl;",
			"  final GlobalKey<RcFormBuilderState> _fbKey = GlobalKey<RcFormBuilderState>();",
			"  ThemeData themeData;",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    ctrl = _$1Ctrl();",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"    ctrl.dispose();",
			"    super.dispose();",
			"  }",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    themeData = Theme.of(context);",
			"    return RcScaffoldModuleChild(",
			"      homeRouteName: '',",
			"      title: 'Form代码片段',",
			"      menuTap: () {},",
			"      body: Column(",
			"        children: <Widget>[",
			"          Expanded(",
			"            child: RcStreamBuilder(",
			"              stream: ctrl.currentForm,",
			"              builder: (context, Map<String, dynamic> user) {",
			"                var fileds = [",
			"                  RcFormBuilderCheckboxList(",
			"                    name: '弹窗',",
			"                    attribute: 'tags',",
			"                    options: [",
			"                      RcFormBuilderFieldOption<String>(title: '好人', data: '好人'),",
			"                      RcFormBuilderFieldOption<String>(title: '帅气', data: '帅气'),",
			"                      RcFormBuilderFieldOption<String>(",
			"                          title: '有胆识', data: '有胆识'),",
			"                    ],",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                  ),",
			"                  RcFormBuilderTextField(",
			"                    attribute: 'name',",
			"                    name: '姓名',",
			"                    hintText: '请输入姓名',",
			"                    layout: RcListTileLayout.row,",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                    titleTrailingBuilder: (_) {",
			"                      return RcIconButton(",
			"                        icon: Icon(",
			"                          RcIcons.position,",
			"                          color: Theme.of(context).accentColor,",
			"                        ),",
			"                      );",
			"                    },",
			"                    onTitleTap: () {",
			"                      print('position');",
			"                    },",
			"                  ),",
			"                  RcFormBuilderTextField(",
			"                    attribute: 'age',",
			"                    name: '年龄',",
			"                    hintText: '请输入年龄',",
			"                    layout: RcListTileLayout.row,",
			"                    textInputType: RcNumberKeyboard.inputType,",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                  ),",
			"                  RcFormBuilderSingleChoiceChip(",
			"                    attribute: 'level',",
			"                    name: '问题级别',",
			"                    layout: RcFormLayout.Row,",
			"                    options: [",
			"                      RcChipItemDto(value: 1, label: '1级'),",
			"                      RcChipItemDto(value: 2, label: '2级'),",
			"                    ],",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                  ),",
			"                  RcFormBuilderTextField(",
			"                    attribute: 'resume',",
			"                    hintText: '请输入内容',",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                    rcTextFieldEnum: RcTextFieldEnum.area,",
			"                    maxLength: 100,",
			"                  ),",
			"                  RcFormBuilderRate(",
			"                    attribute: 'rate',",
			"                    name: '服务评价',",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                  ),",
			"                  RcFormBuilderRadioList(",
			"                    name: '责任单位',",
			"                    attribute: 'unit',",
			"                    options: [",
			"                      RcFormBuilderFieldOption<String>(title: '单位1', data: '1'),",
			"                      RcFormBuilderFieldOption<String>(title: '单位2', data: '2'),",
			"                    ],",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                  ),",
			"                  RcFormBuilderSwitch(",
			"                    attribute: 'notice',",
			"                    name: '开启通知',",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                  ),",
			"                  RcFormBuilderDatePicker(",
			"                    attribute: 'date',",
			"                    name: '日期',",
			"                    validators: [",
			"                      RcFormBuilderValidators.required(),",
			"                    ],",
			"                    require: true,",
			"                  ),",
			"                ];",
			"                return SingleChildScrollView(",
			"                  child: RcFormBuilder(",
			"                    key: _fbKey,",
			"                    onFieldChanged: (key, value, error) {",
			"                      print('key:$key,value:$value');",
			"                      if (key == 'text_field_row') {",
			"                        return false;",
			"                      }",
			"                      // user[key] = value;",
			"                      // ctrl.submit(user);",
			"                    },",
			"                    initialValue: user,",
			"                    children: fileds,",
			"                  ),",
			"                );",
			"              },",
			"            ),",
			"          ),",
			"          RcButtonSheet(",
			"            children: <Widget>[",
			"              RcRaisedButton.big(",
			"                onPressed: () {",
			"                  ctrl.reset();",
			"                },",
			"                label: '重置',",
			"              ),",
			"              RcRaisedButton.big(",
			"                onPressed: () {",
			"                  if (_fbKey.currentState.validateAndSave()) {",
			"                    print(_fbKey.currentState.formValue);",
			"                  } else {",
			"                    ctrl.submit();",
			"                  }",
			"                },",
			"                label: '提交',",
			"              ),",
			"            ],",
			"          ),",
			"        ],",
			"      ),",
			"    );",
			"  }",
			"}",
			"class _$1Ctrl extends ControllerBase {",
			"  RcBehaviorSubject<Map<String, dynamic>> currentForm;",
			"  _$1Ctrl() {",
			"    currentForm = RcBehaviorSubject<Map<String, dynamic>>(onListen: () {",
			"      currentForm.add({});",
			"    });",
			"  }",
			"",
			"  reset() {",
			"    currentForm.add({});",
			"  }",
			"",
			"  submit() {}",
			"  @override",
			"  void dispose() {",
			"    currentForm?.close();",
			"  }",
			"}"
		],
		"description": "创建Form表单页面"
	},
	"创建报表列表": {
		"prefix": [
		"reportstaf","rcreport"
		],
		"body": [
			"import 'package:flutter/widgets.dart';",
			"import 'package:flutter/material.dart';",
			"import 'package:flutter_beaver_special_inspection/api/special_inspection.dart';",
			"import 'package:flutter_beaver_special_inspection/model/professional_check_report.dart';",
			"import 'package:flutter_beaver_special_inspection/model/special_task_dto.dart';",
			"import 'package:flutter_beaver_special_inspection/pages/routes.dart';",
			"import 'package:ricent_components/rc_basic_ui.dart';",
			"import 'package:ricent_components/rc_core_ui.dart';",
			"import 'package:ricent_components/rc_form.dart';",
			"import 'package:ricent_components/rc_table.dart';",
			"import 'package:ricent_components/rc_utils.dart';",
			"import 'package:ricent_core/ricent_core.dart';",
			"import 'package:ricent_components/rc_scaffold.dart';",
			"",
			"class $1 extends StatefulWidget {",
			"  $1();",
			"  @override",
			"  _$1State createState() =>",
			"      _$1State();",
			"}",
			"",
			"class _$1State",
			"    extends State<$1> {",
			"  GlobalKey<RcFormBuilderState> _fbKey = GlobalKey<RcFormBuilderState>();",
			"  _$1Ctrl ctrl;",
			"  ThemeData themeData;",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    ctrl = _$1Ctrl(context);",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"    ctrl.dispose();",
			"    super.dispose();",
			"  }",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    themeData = Theme.of(context);",
			"    return RcScaffoldModuleMain(",
			"      title: 'RcReport代码片段',",
			"      headerBuilder: (context) {",
			"        return Column(",
			"          children: <Widget>[",
			"            RcKeyWordSearch(",
			"              onChanged: (String key) {",
			"                ctrl.keySubject.add(key);",
			"              },",
			"            ),",
			"          ],",
			"        );",
			"      },",
			"      body: Column(",
			"        children: <Widget>[",
			"          RcStreamBuilder(",
			"              stream: ctrl.conditionSubject.stream,",
			"              builder: (context, Map<String, dynamic> condiction) {",
			"                return RcFormBuilder.row(",
			"                  key: _fbKey,",
			"                  initialValue: condiction,",
			"                  resetCallBack: () {",
			"                    ctrl.conditionSubject.forceAdd(ctrl.initialCondiction);",
			"                  },",
			"                  onFieldChanged: (String attr, dynamic value, error) {",
			"                    if (attr == 'time') {",
			"                      condiction['startTime'] = value[0];",
			"                      condiction['endTime'] = value[1];",
			"                      ctrl.conditionSubject.forceAdd(condiction);",
			"                    } else if (attr == 'taskId') {",
			"                      condiction['taskId'] = value;",
			"                      ctrl.conditionSubject.forceAdd(condiction);",
			"                    }",
			"                    return false;",
			"                  },",
			"                  children: <Widget>[",
			"                    RcFormBuilderSingleChoiceChip(",
			"                      attribute: 'weidu',",
			"                      name: '统计维度',",
			"                      options: [",
			"                        RcChipItemDto(label: '区域', value: 1),",
			"                        RcChipItemDto(label: '公司', value: 2),",
			"                        RcChipItemDto(label: '片区', value: 3),",
			"                        RcChipItemDto(label: '项目', value: 4),",
			"                        RcChipItemDto(label: '分期', value: 5),",
			"                      ],",
			"                    ),",
			"                    RcFormBuilderTimeRange(",
			"                      attribute: 'time',",
			"                      name: '时间选择',",
			"                    ),",
			"                    RcStreamBuilder(",
			"                      waitingBuilder: (context) {",
			"                        return SizedBox();",
			"                      },",
			"                      stream: ctrl.specialTaskSubject.stream,",
			"                      builder: (context,",
			"                          List<RcFormBuilderFieldOption<SpecialTaskDto>>",
			"                              tasks) {",
			"                        return RcFormBuilderCheckboxList(",
			"                          attribute: 'taskId',",
			"                          options: tasks,",
			"                          name: '任务选择',",
			"                        );",
			"                      },",
			"                    ),",
			"                  ],",
			"                );",
			"              }),",
			"          Expanded(",
			"            child: RcTableReport<ProfessionalCheckReportDto>(",
			"              numSize: 100,",
			"              freezeCellNumber: 1,",
			"              fields: [",
			"                RcTableReportField(",
			"                  onTap: (data) {",
			"                    Navigator.of(context).pushNamed(",
			"                      SpecialInspectionRoutes.epidemicPreventionDetail,",
			"                      arguments: {",
			"                        'data': data.data,",
			"                      },",
			"                    );",
			"                  },",
			"                  width: 160,",
			"                  builder: (TableReportItem data, int index) {",
			"                    return Column(",
			"                      crossAxisAlignment: CrossAxisAlignment.start,",
			"                      children: <Widget>[",
			"                        RcText(",
			"                          data.data.name,",
			"                          style: themeData.textTheme.body1.copyWith(",
			"                            fontSize: 14,",
			"                          ),",
			"                        ),",
			"                        RcText(",
			"                          data.data.regionName,",
			"                          style: themeData.textTheme.body1.copyWith(",
			"                            color: themeData.accentColor,",
			"                            fontSize: 12,",
			"                          ),",
			"                        ),",
			"                      ],",
			"                    );",
			"                  },",
			"                ),",
			"                RcTableReportField(",
			"                  width: 100,",
			"                  builder: (data, int index) {",
			"                    return RcText(data.data.checkedUnit);",
			"                  },",
			"                ),",
			"                RcTableReportField(",
			"                    width: 60,",
			"                    builder: (data, int index) {",
			"                      return RcText(data.data.checkedUser);",
			"                    }),",
			"                RcTableReportField(",
			"                  width: 100,",
			"                  builder: (data, int) {",
			"                    return RcText(",
			"                        Ricent.datetimeYMD.format(data.data.checkedDate));",
			"                  },",
			"                ),",
			"              ],",
			"              headers: [",
			"                [",
			"                  RcTableReportHeaderCell(label: '项目/工程'),",
			"                ],",
			"                [",
			"                  RcTableReportHeaderCell(label: '检查单位'),",
			"                ],",
			"                [",
			"                  RcTableReportHeaderCell(label: '检查人'),",
			"                ],",
			"                [",
			"                  RcTableReportHeaderCell(label: '检查时间'),",
			"                ],",
			"              ],",
			"              stream: ctrl.reportStream,",
			"              loadMoreCallBack: (int index, int pageSize) async {",
			"                ctrl.conditionSubject.forceAdd(",
			"                  ctrl.conditionSubject.value",
			"                    ..['skip'] = (index - 1) * pageSize,",
			"                );",
			"                return Future.value(true);",
			"              },",
			"            ),",
			"          ),",
			"        ],",
			"      ),",
			"    );",
			"  }",
			"}",
			"",
			"class _$1Ctrl extends ControllerBase {",
			"  ///  筛选条件",
			"  RcBehaviorSubject<Map<String, dynamic>> conditionSubject;",
			"",
			"  /// 关键字搜索",
			"  RcBehaviorSubject<String> keySubject = RcBehaviorSubject<String>.seeded('');",
			"",
			"  /// 源数据",
			"  RcBehaviorSubject<TableReportDto<ProfessionalCheckReportDto>> remoteSubject;",
			"",
			"  /// 渲染数据",
			"  Stream<TableReportDto<ProfessionalCheckReportDto>> reportStream;",
			"",
			"  SpecialInspectionApi specialInspectionApi;",
			"",
			"  /// 默认筛选条件",
			"  Map<String, dynamic> initialCondiction;",
			"",
			"  /// 专项巡检任务",
			"  RcBehaviorSubject<List<RcFormBuilderFieldOption<SpecialTaskDto>>>",
			"      specialTaskSubject;",
			"  _$1Ctrl(BuildContext context) {",
			"    DateTime now = DateTime.now();",
			"    //  初始化参数",
			"    initialCondiction = {",
			"      'startTime': now.add(",
			"        Duration(",
			"          days: -7,",
			"        ),",
			"      ),",
			"      'endTime': now,",
			"      'limit': 100,",
			"      'skip': 0,",
			"    };",
			"    specialInspectionApi = SpecialInspectionApi();",
			"    specialTaskSubject =",
			"        RcBehaviorSubject<List<RcFormBuilderFieldOption<SpecialTaskDto>>>(",
			"            onListen: () {",
			"      specialInspectionApi.querySpecialTask().then((result) {",
			"        specialTaskSubject.add(",
			"          result",
			"              .map(",
			"                (item) => RcFormBuilderFieldOption(",
			"                  title: item.taskName,",
			"                  data: item,",
			"                ),",
			"              )",
			"              .toList(),",
			"        );",
			"      }, onError: (error) {",
			"        specialTaskSubject.add([]);",
			"      });",
			"    });",
			"    remoteSubject =",
			"        RcBehaviorSubject<TableReportDto<ProfessionalCheckReportDto>>(",
			"            onListen: () {",
			"      //  监听筛选数据，每次筛选都会请求数据",
			"      conditionSubject.stream.listen((Map<String, dynamic> map) {",
			"        // RcDialog.showRcLoadingDialog(context);",
			"        getData(map).then((result) {",
			"          remoteSubject.add(result);",
			"          // Navigator.of(context).pop();",
			"        });",
			"      });",
			"    });",
			"",
			"    conditionSubject =",
			"        RcBehaviorSubject<Map<String, dynamic>>.seeded(initialCondiction);",
			"",
			"    //  关键字搜索和数据源合并筛选后显示到的列表里面",
			"    reportStream = combineLatest2(remoteSubject.stream, keySubject.stream,",
			"        (TableReportDto<ProfessionalCheckReportDto> data, String key) {",
			"      return data.copyWith(",
			"        items: data.items.where((item) {",
			"          return item.data.regionName.indexOf(key) > -1 ||",
			"              Pinyin().isIn(item.data.regionName, key);",
			"        }).toList(),",
			"      );",
			"    });",
			"  }",
			"",
			"  /// 请求数据api",
			"  Future<TableReportDto<ProfessionalCheckReportDto>> getData(",
			"      Map<String, dynamic> condition) {",
			"    return specialInspectionApi",
			"        .professionalCheckReport(",
			"      batchType: 536870912,",
			"      fromDate: Ricent.datetimeYMD.format(condition['startTime']),",
			"      toDate: Ricent.datetimeYMD.format(condition['endTime']),",
			"      mySelf: 2,",
			"      skip: condition['skip'],",
			"      limit: condition['limit'],",
			"    )",
			"        .then((pager) {",
			"      TableReportDto<ProfessionalCheckReportDto> reportDto =",
			"          TableReportDto<ProfessionalCheckReportDto>(",
			"        items: pager.items.map((ProfessionalCheckReportDto f) {",
			"          return TableReportItem(",
			"            id: f.id,",
			"            isOpen: true,",
			"            data: f,",
			"          );",
			"        }).toList(),",
			"        haveNextPage: pager.haveNextPage,",
			"        totalNum: pager.totalNum,",
			"      );",
			"      return reportDto;",
			"    }, onError: (error) {",
			"      return TableReportDto(items: []);",
			"    });",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"    specialTaskSubject?.close();",
			"    keySubject?.close();",
			"    conditionSubject?.close();",
			"    remoteSubject?.close();",
			"  }",
			"}"
		],
		"description": "创建报表列表"
	},
	"创建详情查看": {
		"prefix": [
			"rcdetail","detailstaf"
		],
		"body": [
			"import 'package:flutter/widgets.dart';",
			"import 'package:flutter/material.dart';",
			"import 'package:ricent_components/rc_buttons.dart';",
			"// import 'package:flutter_beaver_files/flutter_beaver_files.dart';",
			"import 'package:ricent_components/rc_table.dart';",
			"import 'package:ricent_components/rc_scaffold.dart';",
			"import 'package:flutter_beaver_font/flutter_beaver_font.dart';",
			"",
			"import 'package:ricent_core/ricent_core.dart';",
			"",
			"class $1 extends StatefulWidget {",
			"  @override",
			"  _$1State createState() => _$1State();",
			"}",
			"",
			"class _$1State extends State<$1> {",
			"  _$1Ctrl ctrl;",
			"  ThemeData themeData;",
			"  @override",
			"  void initState() {",
			"   super.initState();",
			"   ctrl = _$1Ctrl();",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"   ctrl.dispose();",
			"   super.dispose();",
			"  }",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"   themeData = Theme.of(context);",
			"   return RcScaffoldModuleChild(",
			"     homeRouteName: '',",
			"     title: '',",
			"     menuTap: () {},",
			"     body: SingleChildScrollView(",
			"       child: Column(",
			"         children: <Widget>[",
			"           RcTable.normal(",
			"             dataList: ctrl.normalDataList,",
			"             titleWeight: 0.45,",
			"           ),",
			"         ],",
			"       ),",
			"     ),",
			"   );",
			"  }",
			"}",
			"",
			"class _$1Ctrl extends ControllerBase {",
			"  final List<RcTableData> normalDataList = [",
			"    RcTableData.header('我是标题'),",
			"    RcTableData.common(",
			"      title: '项目分期',",
			"      trailingBuilder: (context) {",
			"       return RcIconButton(",
			"         icon: Icon(",
			"          RcIcons.position,",
			"          color: Theme.of(context).accentColor,",
			"         ),",
			"       );",
			"      },",
			"      content: '模拟项目一期',",
			"    ),",
			"    RcTableData.common(",
			"      title: '验收部位',",
			"      content: '主体',",
			"      data: 'object',",
			"      onContentTap: (dynamic value) {",
			"       print('value:$value');",
			"      },",
			"    ),",
			"    RcTableData.common(title: '分包项目经理', content: '分包'),",
			"    RcTableData.spacer(),",
			"    RcTableData.common(title: '验收结果', content: '合格'),",
			"    RcTableData.common(title: '验收人', content: '张劳工'),",
			"    RcTableData.common(title: '验收时间', content: '2020-02-28'),",
			"    RcTableData.common(",
			"      title: '附件照片',",
			"      contentBuilder: (context) {",
			"        // return RcImageGroupWrap(",
			"        //   groupId: '',",
			"        //   controller: controller,",
			"        // );",
			"        return SizedBox();",
			"      },",
			"    ),",
			"  ];",
			"  _$1Ctrl() {}",
			"  @override",
			"  void dispose() {}",
			"}"
		],
		"description": "创建详情查看"
	}
}